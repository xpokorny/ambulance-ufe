/* tslint:disable */
/* eslint-disable */
/**
 * Appointment Scheduling Api
 * Medical Appointment Scheduling System
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xpokorny@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Location,
} from '../models';
import {
    LocationFromJSON,
} from '../models';

/**
 * LocationsApi - interface
 * 
 * @export
 * @interface LocationsApiInterface
 */
export interface LocationsApiInterface {
    /**
     * Use this method to get all locations
     * @summary Get all locations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationsApiInterface
     */
    getLocationsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Location>>>;

    /**
     * Use this method to get all locations
     * Get all locations
     */
    getLocations(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Location>>;

}

/**
 * 
 */
export class LocationsApi extends runtime.BaseAPI implements LocationsApiInterface {

    /**
     * Use this method to get all locations
     * Get all locations
     */
    async getLocationsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Location>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/locations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(LocationFromJSON));
    }

    /**
     * Use this method to get all locations
     * Get all locations
     */
    async getLocations(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Location>> {
        const response = await this.getLocationsRaw(initOverrides);
        return await response.value();
    }

}
