/* tslint:disable */
/* eslint-disable */
/**
 * Appointment Scheduling Api
 * Medical Appointment Scheduling System
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xpokorny@stuba.sk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Location } from './Location';
import {
    LocationFromJSON,
    LocationToJSON,
} from './Location';
import type { User } from './User';
import {
    UserFromJSON,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Appointment
 */
export interface Appointment {
    /**
     * Unique identifier of the appointment
     * @type {string}
     * @memberof Appointment
     */
    id: string;
    /**
     * 
     * @type {User}
     * @memberof Appointment
     */
    patient: User;
    /**
     * 
     * @type {User}
     * @memberof Appointment
     */
    doctor: User;
    /**
     * 
     * @type {Location}
     * @memberof Appointment
     */
    location: Location;
    /**
     * Date and time of the appointment
     * @type {Date}
     * @memberof Appointment
     */
    dateTime: Date;
    /**
     * 
     * @type {User}
     * @memberof Appointment
     */
    createdBy: User;
}

/**
 * Check if a given object implements the Appointment interface.
 */
export function instanceOfAppointment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "patient" in value;
    isInstance = isInstance && "doctor" in value;
    isInstance = isInstance && "location" in value;
    isInstance = isInstance && "dateTime" in value;
    isInstance = isInstance && "createdBy" in value;

    return isInstance;
}

export function AppointmentFromJSON(json: any): Appointment {
    return AppointmentFromJSONTyped(json);
}

export function AppointmentFromJSONTyped(json: any): Appointment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'patient': UserFromJSON(json['patient']),
        'doctor': UserFromJSON(json['doctor']),
        'location': LocationFromJSON(json['location']),
        'dateTime': (new Date(json['dateTime'])),
        'createdBy': UserFromJSON(json['createdBy']),
    };
}

export function AppointmentToJSON(value?: Appointment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'patient': UserToJSON(value.patient),
        'doctor': UserToJSON(value.doctor),
        'location': LocationToJSON(value.location),
        'dateTime': (value.dateTime.toISOString()),
        'createdBy': UserToJSON(value.createdBy),
    };
}

